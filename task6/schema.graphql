type ApprovalEntity @entity {
  id: ID!
  _owner: Bytes! # address
  _spender: Bytes! # address
  _amount: BigInt!
}

type BurnEntity @entity {
  id: ID!
  _burner: Bytes! # address
  _amount: BigInt!
}

type TransferEntity @entity {
  id: ID!
  _to: Bytes! # address
  _from: Bytes! # address
  _amount: BigInt!
  timestamp: BigInt!
}

type TokenUser @entity {
  id: ID!
  _allowanceAmount: BigInt!
  _balance: BigInt!
}

type TokenStat @entity {
  id: ID!
  _holders: BigInt!
  _totalSupply: BigInt!
}


type StakeEntity @entity {
  id: ID!
  altQuantity: BigInt!
  initiationTimestamp: BigInt! # uint256
  durationTimestamp: BigInt! # uint256
  rewardAmount: BigInt! # uint256
  staker: Bytes!
  phnxContractAddress: Bytes!
  portalAddress: Bytes!
}

type UnstakeEntity @entity {
  id: ID!
  staker: Bytes!
  stakedToken: Bytes!
  portalAddress: Bytes!
  altQuantity: BigInt!
  durationTimestamp: BigInt! # uint256
}

type StakingUser @entity {
  id: ID!
  stakedAmount: BigInt! # uint256
  transactions: [Transaction!]! @derivedfrom(field: "user")
}

type Transaction @entity {
  id: ID!
  type: String!
  amount: BigInt! # uint256
  timestamp: BigInt! # uint256
  txHash: String!
  blockNumber: BigInt! # uint256
  user: StakingUser!
}

type Contract @entity {
  id: ID!
  stakedAmount: BigInt! # uint256
  totalReward: BigInt! # uint256
}

